#以下创建用户表脚本
create table user
(
id       int auto_increment comment '主键'
primary key,
no       varchar(20)       null comment '账号',
name     varchar(100)      not null comment '名字',
password varchar(60)       not null comment '密码',
age      int               null,
sex      int               null comment '性别',
phone    varchar(20)       null comment '电话',
role_id  int               null comment '角色 0超级管理员，1管理员，2普通账号',
isValid  varchar(4) default 'Y' null comment '是否有效，Y有效，其他无效'
)
ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='用户表';
INSERT INTO user (no, name, password, age, sex, phone, role_id, isValid)
VALUES (
    'admin',
    '超级管理员',
    '$2a$10$N7XIb6kj2/MXOeZl61O8fecYnLSud4.oUJd90XwOjtb.hsjyQUfHa',
    30,
    0,
    '18611785026',
    0,
    DEFAULT  -- 显式使用默认值'Y'[1,2](@ref)
);
#以上创建用户表脚本

#以下消息记录表
CREATE TABLE IF NOT EXISTS `sms` (
    `id` INT NOT NULL AUTO_INCREMENT COMMENT '消息唯一标识ID',
    `phonenumber` VARCHAR(20) NOT NULL COMMENT '手机号码',
    `content` TEXT NOT NULL COMMENT '消息内容',
    `sendtime` DATETIME NOT NULL COMMENT '发送时间',
    `destcode` VARCHAR(50) NOT NULL COMMENT '目标代码',
    `sequenceid` VARCHAR(100) NOT NULL COMMENT '序列ID',
    PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='消息记录表';
#以上消息记录表

#以下创建菜单表脚本
create table menu
(
id int(11) not null,
menuCode varchar(8) default null comment '菜单编码',
menuName varchar(16) default null comment '菜单名字',
menuLevel varchar(2) default null comment '菜单级别',
menuParentCode varchar(8) default null comment '菜单的父code',
menuClick varchar(16) default null comment '点击触发的函数',
menuRight varchar(8) default null comment '权限 0超级管理员，1表示管理员，2表示普通用户，可以用逗号组合使用',
menuComponent varchar(200) default null comment '页面路径',
menuIcon varchar(100) default null,
primary key (id)
) ENGINE=InnoDB DEFAULT charset=utf8;

BEGIN;
INSERT INTO `menu` VALUES (1,'001','管理员管理','1',NULL,'Admin','0','admin/AdminMange.vue','el-icon-s-custom');
INSERT INTO `menu` VALUES (2,'002','用户管理','1',NULL,'User','0,1','user/UserMange.vue','el-icon-user-solid');
COMMIT;

#以上创建菜单表脚本

#以下角色对应的权限表
DROP TABLE IF EXISTS `role_permissions`;
CREATE TABLE `role_permissions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NOT NULL,
  `role_name` VARCHAR(255) NOT NULL,
  `permissions` TEXT, -- 如果权限是简单的列表，可以使用TEXT类型存储
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
BEGIN;
INSERT INTO `role_permissions` (`role_id`, `role_name`, `permissions`) VALUES
(0, 'admin', 'sys_admin'),
(1, '管理员', 'sys_manager'),
(2, '普通用户', 'sys_normal');
COMMIT;
#以上角色对应的权限表

#以下新建仓库表
DROP TABLE IF EXISTS `storage`;
CREATE TABLE `storage` (
`id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
`name` varchar(100) NOT NULL COMMENT '仓库名',
`remark` varchar(1000) DEFAULT NULL COMMENT '备注',
PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
#以上新建仓库表

#物品分类表
DROP TABLE IF EXISTS `goodsType`;
CREATE TABLE `goodsType` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(100) NOT NULL COMMENT '分类名',
  `remark` varchar(1000) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

#物品表
DROP TABLE IF EXISTS `goods`;
CREATE TABLE `goods` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(100) NOT NULL COMMENT '货名',
  `storage` int(11) NOT NULL COMMENT '仓库id',
  `goodsType` int(11) NOT NULL COMMENT '分类',
  `count` int(11) DEFAULT NULL COMMENT '数量',
  `remark` varchar(1000) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

#操作记录表
DROP TABLE IF EXISTS `record`;
CREATE TABLE `record` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `goods` int(11) NOT NULL COMMENT '货品id',
  `userId` int(11) DEFAULT NULL COMMENT '取货人/补货人',
  `admin_id` int(11) DEFAULT NULL COMMENT '操作人id',
  `count` int(11) DEFAULT NULL COMMENT '数量',
  `createtime` datetime DEFAULT NULL COMMENT '操作时间',
  `remark` varchar(1000) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
